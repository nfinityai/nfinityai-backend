events {
    worker_connections  1024;
}

http {
    keepalive_timeout  65;
    gzip  on;
    resolver 127.0.0.11 valid=1s;  # DNS resolver

    log_format timed_combined '$remote_addr - $remote_user [$time_local] '
                              '"$request" $status $body_bytes_sent '
                              '"$http_referer" "$http_user_agent" '
                              '$request_time';

    server {
        listen 80;
        server_name api.nfinityai.xyz;

        location / {
            root /usr/share/nginx/html;
            index index.html;
        }

        location /.well-known/acme-challenge/ {
            root /data/letsencrypt;
        }
    }

    server {
        listen 443 ssl;
        server_name app.nfinityai.xyz;

        ssl_certificate /ssl/fullchain.pem;
        ssl_certificate_key /ssl/privkey.pem;

        location ~ ^/api(/.*)?$ {
            # CORS headers for all responses
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }

            set $backend_api "$backend_api:8000";
            proxy_pass http://$backend_api$1$is_args$args;
            # Other proxy settings
            proxy_buffering on;
            proxy_buffer_size 16k;
            proxy_busy_buffers_size 24k;
            # Additional recommended settings
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Adding CORS headers for all responses
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        }

        error_log /var/log/nginx/error.log;
    }
}
